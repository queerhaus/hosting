---

- name: Install required packages
  become: yes
  apt: 
    name:
      - docker-compose
      - docker.io
    state: latest
    update_cache: yes

# If we one day need a newer version of docker this is how to install it
# - name: Uninstall old docker
#   become: true
#   apt: 
#     name:
#       - docker.io
#     state: absent 
#     update_cache: no
# - name: Add Docker apt key
#   become: yes
#   apt_key:
#     url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
#     id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
#     state: present
# - name: Add Docker repository
#   become: yes
#   apt_repository:
#     filename: docker
#     repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
#     state: present
#     update_cache: true
# - name: Install docker
#   become: true
#   apt: 
#     name:
#       - docker-ce
#       - docker-compose
#     state: latest 
#     update_cache: no

- name: Install custom docker config
  become: yes
  copy:
    src: etc/docker/daemon.json
    dest: /etc/docker/daemon.json
  notify:
    - Restart docker

- name: Create .docker directory
  become: true
  file:
    path: /home/{{ item.name }}/.docker
    state: directory
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
  with_items: "{{ queer_users }}"

- name: Create docker config with auth token
  become: true
  template:
    src: docker-config.json
    dest: /home/{{ item.name }}/.docker/config.json
    owner: "{{ item.name }}"
    group: "{{ item.name }}"
  with_items: "{{ queer_users }}"

- name: Ensure docker is running
  become: yes
  service:
    name: docker
    state: started

- name: Install docker purge cronjob
  become: yes
  copy:
    src: etc/cron.d/queerdocker
    dest: /etc/cron.d/queerdocker

- name: Create .docker directory for deploy user
  become: true
  file:
    path: /home/deploy/.docker
    state: directory
    owner: deploy
    group: deploy

- name: Create docker config with auth token for deploy
  become: true
  template:
    src: docker-config.json
    dest: /home/deploy/.docker/config.json
    owner: deploy
    group: deploy
  with_items: [ { github_personal_access_token: "{{ deploy_user_github_token }}" } ]
