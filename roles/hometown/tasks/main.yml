---

- name: Set up deploy user authorized key
  become: true
  when: setups.hometown.deploy is defined
  authorized_key:
    user: deploy
    state: present
    key: "{{ setups.hometown.deploy.public_key }}"
    key_options: 'command="{{ setups.hometown.deploy.command }}"'

- name: Install cronjob
  become: yes
  copy:
    src: etc/cron.d/queertown
    dest: /etc/cron.d/queertown

- name: Create hometown directory
  file:
    path: "{{ setups.hometown.run_dir }}"
    state: directory
    group: queers
    mode: "u=rwx,g=rwx,o=rx,g+s"

- name: Install backup script
  template:
    src: backup.sh
    dest: "{{ setups.hometown.run_dir }}/backup.sh"
    group: queers
    mode: "u=rwx,g=rwx,o=rx"

- name: Template docker-dompose file
  template:
    src: docker-compose.yaml
    dest: "{{ setups.hometown.run_dir }}/docker-compose.yaml"
    group: queers
    mode: "u=rw,g=rw,o=r"

- name: Remove env file
  file:
    path: "{{ setups.hometown.run_dir }}/.env"
    state: absent

- name: Template hometown env file
  template:
    src: .env.hometown
    dest: "{{ setups.hometown.run_dir }}/.env.hometown"
    group: queers
    mode: "u=rw,g=rw,o=r"

- name: Set owner recursively for upload folder
  become: yes
  file:
    path: "{{ setups.hometown.data_dir }}/public"
    state: directory
    owner: '991'
    group: queers
    recurse: yes

- name: Pull containers images
  command: 
    cmd: docker-compose pull
    chdir: "{{ setups.hometown.run_dir }}"
  register: pull_result
  changed_when: pull_result.stderr.find('downloaded newer image') != -1

- name: Run migrations
  command:
    cmd: docker-compose run --rm town-web rails db:migrate
    chdir: "{{ setups.hometown.run_dir }}"
  when: pull_result.changed

- name: Start up containers
  command: 
    cmd: docker-compose up -d --remove-orphans
    chdir: "{{ setups.hometown.run_dir }}"
  register: up_result
  changed_when: up_result.stderr.find('Creating') != -1 or up_result.stderr.find('Recreating') != -1

- name: Clear caches
  command:
    cmd: docker-compose run --rm town-web bin/tootctl cache clear
    chdir: "{{ setups.hometown.run_dir }}"
  when: pull_result.changed