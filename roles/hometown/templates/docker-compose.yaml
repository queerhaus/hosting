version: '3.5'

networks:
  external_network:
    name: queerhaus_external
    external: true
  internal_network:
    name: queerhaus_internal
    internal: true
    external: true

services:

  town-db:
    restart: unless-stopped
    image: postgres:9.6-alpine
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - {{ setups.hometown.data_dir }}/postgres:/var/lib/postgresql/data
    environment:
      # Disable authentication  https://www.postgresql.org/docs/current/auth-trust.html
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - internal_network

  town-redis:
    restart: unless-stopped
    image: redis:5.0-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - {{ setups.hometown.data_dir }}/redis:/data
    networks:
      - internal_network

  town-web:
    image: {{ setups.hometown.config.docker_image }}
    restart: unless-stopped
    env_file: .env.hometown
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    expose:
      - "3000"
    depends_on:
      - town-db
      - town-redis
    labels:
      traefik.enable: true
      traefik.http.routers.town-web.rule: Host(`{{ top_domain }}`,`queer.house`)
      traefik.http.routers.town-web.entrypoints: websecure
      traefik.http.routers.town-web.tls.certresolver: letsencrypt
      traefik.http.middlewares.town-headers.headers.customRequestHeaders.SSLRedirect: true
      traefik.http.middlewares.town-headers.headers.customRequestHeaders.SSLForceHost: true
      traefik.http.middlewares.town-headers.headers.customRequestHeaders.SSLHost: {{ top_domain }}
      traefik.http.middlewares.town-redirect.redirectregex.regex: queer.house([/](.*))*
      traefik.http.middlewares.town-redirect.redirectregex.replacement: {{ top_domain }}$${1}
      traefik.http.middlewares.town-redirect.redirectregex.permanent: true
      traefik.http.routers.town-web.middlewares: town-headers@docker,town-redirect@docker
    volumes:
      - {{ setups.hometown.data_dir }}/public/system:/mastodon/public/system
    networks:
      - external_network
      - internal_network

  town-streaming:
    image: {{ setups.hometown.config.docker_image }}
    restart: unless-stopped
    env_file: .env.hometown
    command: node ./streaming
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    expose:
      - "4000"
    depends_on:
      - town-db
      - town-redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.town-streaming.rule=(Host(`{{ top_domain }}`) && PathPrefix(`/api/v1/streaming`))"
      - "traefik.http.routers.town-streaming.entrypoints=websecure"
      - "traefik.http.routers.town-streaming.tls.certresolver=letsencrypt"
      - "traefik.http.services.town-streaming.loadbalancer.server.port=4000"
    networks:
      - external_network
      - internal_network

  town-sidekiq:
    image: {{ setups.hometown.config.docker_image }}
    restart: unless-stopped
    env_file: .env.hometown
    command: bundle exec sidekiq
    depends_on:
      - town-db
      - town-redis
    volumes:
      - {{ setups.hometown.data_dir }}/public/system:/mastodon/public/system
    networks:
      - external_network
      - internal_network

