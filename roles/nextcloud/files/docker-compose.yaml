version: '3.5'

networks:
  external_network:
    name: queerhaus_external
    external: true
  internal_network:
    name: queerhaus_internal
    internal: true
    external: true

services:

  nextcloud-db:
    image: mariadb:10.5
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: unless-stopped
    volumes:
      - ./data/nextcloud/db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${NEXTCLOUD_MYSQL_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    networks:
      - internal_network

  nextcloud-app:
    image: nextcloud:20.0
    depends_on:
      - nextcloud-db
      - onlyoffice-documentserver
    volumes:
      - ${NEXTCLOUD_MOUNTPOINT:-./data/nextcloud/app}:/var/www/html
    environment:
      MYSQL_HOST: nextcloud-db
      MYSQL_DATABASE: nextcloud
      MYSQL_USER: nextcloud
      MYSQL_PASSWORD: ${NEXTCLOUD_MYSQL_PASSWORD}
      APACHE_DISABLE_REWRITE_IP: 1
      TRUSTED_PROXIES: traefik
      NEXTCLOUD_TRUSTED_DOMAINS: cloud.${TOP_DOMAIN}
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.${TOP_DOMAIN}`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.nextcloud-headers.headers.stsseconds=15552000"
      # https://community.traefik.io/t/traefik-2-0-and-onlyoffice-not-work-work-correctly-in-v-2/3286/3
      - "traefik.http.middlewares.nextcloud-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.nextcloud-redirect.redirectregex.regex=^https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloud-redirect.redirectregex.replacement=https://$${1}/remote.php/dav/"
      - "traefik.http.middlewares.nextcloud-redirect.redirectregex.permanent=true"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-redirect@docker,nextcloud-headers@docker"
    networks:
      - external_network
      - internal_network

  onlyoffice-documentserver:
    image: onlyoffice/documentserver:6.0
    depends_on:
      - onlyoffice-postgresql
      - onlyoffice-rabbitmq
    environment:
      - DB_TYPE=postgres
      - DB_HOST=onlyoffice-postgresql
      - DB_PORT=5432
      - DB_NAME=onlyoffice
      - DB_USER=onlyoffice
      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq
      # Uncomment strings below to enable the JSON Web Token validation.
      - JWT_ENABLED=true
      - JWT_SECRET=${ONLYOFFICE_SECRET}
      #- JWT_HEADER=Authorization
      #- JWT_IN_BODY=true
    stdin_open: true
    restart: unless-stopped
    volumes:
       - ./data/onlyoffice/data:/var/www/onlyoffice/Data
       - ./data/onlyoffice/logs:/var/log/onlyoffice
       - ./data/onlyoffice/cache:/var/lib/onlyoffice/documentserver/App_Data/cache/files
       - ./data/onlyoffice/public:/var/www/onlyoffice/documentserver-example/public/files
       - ./data/onlyoffice/fonts:/usr/share/fonts
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.onlyoffice.rule=Host(`office.${TOP_DOMAIN}`)"
      - "traefik.http.routers.onlyoffice.entrypoints=websecure"
      - "traefik.http.routers.onlyoffice.tls.certresolver=letsencrypt"
      # https://community.traefik.io/t/traefik-2-0-and-onlyoffice-not-work-work-correctly-in-v-2/3286/3
      - "traefik.http.routers.onlyoffice.middlewares=oo-header"
      - "traefik.http.middlewares.oo-header.headers.customRequestHeaders.X-Forwarded-Proto=https"
    networks:
      - external_network
      - internal_network
       
  onlyoffice-rabbitmq:
    image: rabbitmq:3
    restart: unless-stopped
    expose:
      - '5672'
    networks:
      - internal_network

  onlyoffice-postgresql:
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_DB=onlyoffice
      - POSTGRES_USER=onlyoffice
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: unless-stopped
    expose:
      - '5432'
    volumes:
      - ./data/onlyoffice/postgres:/var/lib/postgresql
    networks:
      - internal_network
