version: '3.5'

networks:
  external_network:
    name: queerhaus_external
    external: true
  internal_network:
    name: queerhaus_internal
    internal: true
    external: true

services:

  peertube-app:
    image: chocobozzz/peertube:v3.0.1-buster
    volumes:
      - {{ setups.peertube.data_dir }}/peertube-data:/data
      #- {{ setups.peertube.data_dir }}/config:/config
    depends_on:
      - peertube-db
      - peertube-redis
    restart: unless-stopped
    environment:
      PEERTUBE_DB_USERNAME: peertube
      PEERTUBE_DB_PASSWORD: {{ setups.peertube.config.postgres_password }}
      PEERTUBE_DB_HOSTNAME: peertube-db
      PEERTUBE_REDIS_HOSTNAME: peertube-redis
      PEERTUBE_WEBSERVER_HOSTNAME: video.{{ top_domain }}
      PEERTUBE_SMTP_USERNAME: {{ smtp_user }}
      PEERTUBE_SMTP_PASSWORD: {{ smtp_pass }}
      PEERTUBE_SMTP_HOSTNAME: {{ smtp_server }}
      PEERTUBE_SMTP_PORT: {{ smtp_port }}
      PEERTUBE_SMTP_FROM: noreply@{{ smtp_domain }}
      PEERTUBE_SMTP_TLS: "false"
      PEERTUBE_SMTP_DISABLE_STARTTLS: "false"
      PEERTUBE_ADMIN_EMAIL: {{ setups.peertube.config.email }}
      PT_INITIAL_ROOT_PASSWORD: {{ setups.peertube.config.root_user_pass }}
    labels:
      traefik.enable: true
      traefik.http.routers.peertube.rule: Host(`{{ setups.peertube.config.domain }}`)
      traefik.http.routers.peertube.entrypoints: websecure
      traefik.http.routers.peertube.tls.certresolver: letsencrypt
      traefik.http.middlewares.peertube-headers.headers.customRequestHeaders.SSLRedirect: true
      traefik.http.middlewares.peertube-headers.headers.customRequestHeaders.SSLForceHost: true
      traefik.http.middlewares.peertube-headers.headers.customRequestHeaders.SSLHost: {{ setups.peertube.config.domain }}
      traefik.http.routers.peertube.middlewares: peertube-headers
      traefik.http.services.peertube.loadbalancer.server.port: 9000
      traefik.tcp.routers.peertube-tcp.entrypoints: peertube-tcp # port 1935
      #traefik.tcp.routers.peertube-tcp.rule: HostSNI(`*`)
      #traefik.tcp.routers.peertube-tcp.tls: true
      #traefik.tcp.routers.peertube-app.tls.certresolver: le
    networks:
      - external_network
      - internal_network

  peertube-db:
    image: postgres:13-alpine
    volumes:
      - {{ setups.peertube.data_dir }}/postgres:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      POSTGRES_USER: peertube
      POSTGRES_PASSWORD: {{ setups.peertube.config.postgres_password }}
      POSTGRES_DB: peertube
    networks:
      - internal_network

  peertube-redis:
    image: redis:6-alpine
    volumes:
      - {{ setups.peertube.data_dir }}/redis:/data
    restart: unless-stopped
    networks:
      - internal_network
