version: '3'

networks:
  external_network:
  internal_network:
    internal: true

services:

###########
# TRAEFIK #
###########
  traefik:
    image: traefik:2.1
    restart: unless-stopped
    command: 
#      - "--log.level=DEBUG"
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=$ADMIN_EMAIL"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`traefik.${TOP_DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=dashboardauth"
      - "traefik.http.middlewares.dashboardauth.basicauth.users=${TRAEFIK_USERNAME}:${TRAEFIK_PASSWORD}"
      # HTTPS Redirect
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    networks:
      - external_network


##########
# CODIMD #
##########
  codi-db:
    # Don't upgrade PostgreSQL by simply changing the version number
    # You need to migrate the Database to the new PostgreSQL version
    image: postgres:9.6-alpine
    restart: unless-stopped
    #mem_limit: 256mb         # version 2 only
    #memswap_limit: 512mb     # version 2 only
    #read_only: true          # not supported in swarm mode please enable along with tmpfs
    #tmpfs:
    #  - /run/postgresql:size=512K
    #  - /tmp:size=256K
    environment:
      - POSTGRES_USER=codimd
      - POSTGRES_PASSWORD=codimdpass
      - POSTGRES_DB=codimd
    volumes:
      - ./data/codi/postgres:/var/lib/postgresql/data
    networks:
      - internal_network

  codi-web:
    image: quay.io/codimd/server:1.3.2
    restart: unless-stopped
    #mem_limit: 256mb         # version 2 only
    #memswap_limit: 512mb     # version 2 only
    #read_only: true          # not supported in swarm mode, enable along with tmpfs
    #tmpfs:
    #  - /tmp:size=512K
    #  - /codimd/tmp:size=1M
    volumes:
      - ./data/codi/uploads:/codimd/public/uploads
    environment:
      CMD_DB_URL: postgres://codimd:codimdpass@codi-db:5432/codimd
      CMD_FORBIDDEN_NOTE_IDS: robots.txt
      CMD_IMAGE_UPLOAD_TYPE: filesystem
      CMD_PORT: 80
      CMD_DOMAIN: codimd.${TOP_DOMAIN}
      CMD_PROTOCOL_USESSL: "true"
      CMD_USECDN: "false"
      CMD_URL_ADDPORT: "false"
      CMD_EMAIL: "false"
      CMD_ALLOW_EMAIL_REGISTER: "false"
      CMD_ALLOW_GRAVATAR: "false"
    depends_on:
      - codi-db
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.codi-web.rule=Host(`codimd.${TOP_DOMAIN}`)"
      - "traefik.http.routers.codi-web.entrypoints=websecure"
      - "traefik.http.routers.codi-web.tls.certresolver=letsencrypt"
      - "traefik.http.services.codi-web.loadbalancer.server.port=80"
    networks:
      - external_network
      - internal_network


#####################
# MASTODON/HOMETOWN #
#####################
  town-db:
    restart: unless-stopped
    image: postgres:9.6-alpine
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ./data/hometown/postgres:/var/lib/postgresql/data
    networks:
      - internal_network

  town-redis:
    restart: unless-stopped
    image: redis:5.0-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./data/hometown/redis:/data
    networks:
      - internal_network

  town-web:
    image: hometown:local
    build: submodules/hometown
    restart: unless-stopped
    env_file: .env.hometown
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    expose:
      - "3000"
    depends_on:
      - town-db
      - town-redis
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hometown-web.rule=Host(`${TOP_DOMAIN}`)"
      - "traefik.http.routers.hometown-web.entrypoints=websecure"
      - "traefik.http.routers.hometown-web.tls.certresolver=letsencrypt"
    volumes:
      - ./data/hometown/public/system:/mastodon/public/system
    networks:
      - external_network
      - internal_network

  town-streaming:
    image: hometown:local
    build: submodules/hometown
    restart: unless-stopped
    env_file: .env.hometown
    command: node ./streaming
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    expose:
      - "4000"
    depends_on:
      - town-db
      - town-redis
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hometown-streaming.rule=(Host(`${TOP_DOMAIN}`) && PathPrefix(`/api/v1/streaming`))"
      - "traefik.http.routers.hometown-streaming.entrypoints=websecure"
      - "traefik.http.routers.hometown-streaming.tls.certresolver=letsencrypt"
    networks:
      - external_network
      - internal_network

  town-sidekiq:
    image: hometown:local
    build: submodules/hometown
    restart: unless-stopped
    env_file: .env.hometown
    command: bundle exec sidekiq
    depends_on:
      - town-db
      - town-redis
      - traefik
    volumes:
      - ./data/hometown/public/system:/mastodon/public/system
    networks:
      - external_network
      - internal_network


#####################
# MASTODON ORIGINAL #
#####################
  mast-db:
    restart: unless-stopped
    image: postgres:9.6-alpine
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ./data/mastodon/postgres:/var/lib/postgresql/data
    networks:
      - internal_network

  mast-redis:
    restart: unless-stopped
    image: redis:5.0-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./data/mastodon/redis:/data
    networks:
      - internal_network

  mast-web:
    image: tootsuite/mastodon:v3.0.1
    restart: unless-stopped
    env_file: .env.mastodon
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    expose:
      - "3000"
    depends_on:
      - mast-db
      - mast-redis
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mastodon-web.rule=Host(`masto-test.${TOP_DOMAIN}`)"
      - "traefik.http.routers.mastodon-web.entrypoints=websecure"
      - "traefik.http.routers.mastodon-web.tls.certresolver=letsencrypt"
    volumes:
      - ./data/mastodon/public/system:/mastodon/public/system
    networks:
      - external_network
      - internal_network

  mast-streaming:
    image: tootsuite/mastodon:v3.0.1
    restart: unless-stopped
    env_file: .env.mastodon
    command: node ./streaming
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    expose:
      - "4000"
    depends_on:
      - mast-db
      - mast-redis
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mastodon-streaming.rule=(Host(`masto-test.${TOP_DOMAIN}`) && PathPrefix(`/api/v1/streaming`))"
      - "traefik.http.routers.mastodon-streaming.entrypoints=websecure"
      - "traefik.http.routers.mastodon-streaming.tls.certresolver=letsencrypt"
    networks:
      - external_network
      - internal_network

  mast-sidekiq:
    image: tootsuite/mastodon:v3.0.1
    restart: unless-stopped
    env_file: .env.mastodon
    command: bundle exec sidekiq
    depends_on:
      - mast-db
      - mast-redis
      - traefik
    volumes:
      - ./data/mastodon/public/system:/mastodon/public/system
    networks:
      - external_network
      - internal_network
